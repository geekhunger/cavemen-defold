-- Custom Render Script To Fix Aspect Ratio
-- borrowed from https://github.com/britzl/publicexamples/tree/master/examples/fixed_aspect_ratio
-- and heavily modified by kennstewayne.de

function init(self)
	self.tile_pred = render.predicate({"tile"})
	self.particle_pred = render.predicate({"particle"})
	self.gui_pred = render.predicate({"gui"})
	self.text_pred = render.predicate({"text"})
	
	self.clear_color   = vmath.vector4(0, 0, 0, 0)
	self.clear_color.x = sys.get_config("render.clear_color_red", 0)
	self.clear_color.y = sys.get_config("render.clear_color_green", 0)
	self.clear_color.z = sys.get_config("render.clear_color_blue", 0)
	self.clear_color.w = sys.get_config("render.clear_color_alpha", 0)
	
	self.view = vmath.matrix4()
	
	self.window_width   = render.get_width()
	self.window_height  = render.get_height()
	self.pivot_position = vmath.vector3(.5, .5, 0)
	self.pivot_offset_x = 0
	self.pivot_offset_y = 0
	self.zoom = 0
end

function update(self)
	render.set_depth_mask(true)
	render.clear({[render.BUFFER_COLOR_BIT] = self.clear_color, [render.BUFFER_DEPTH_BIT] = 1, [render.BUFFER_STENCIL_BIT] = 0})
	
	-- Setup camera viewport
	self.pivot_offset_x = self.pivot_position.x * self.window_width
	self.pivot_offset_y = self.pivot_position.y * self.window_height
	
	render.set_view(self.view)
	render.set_viewport(0, 0, self.window_width, self.window_height)
	render.set_projection(vmath.matrix4_orthographic(
		-self.pivot_offset_x,
		self.window_width - self.pivot_offset_x,
		-self.pivot_offset_y,
		self.window_height - self.pivot_offset_y,
		-1, 1
	))
	
	render.set_depth_mask(false)
	render.disable_state(render.STATE_DEPTH_TEST)
	render.disable_state(render.STATE_STENCIL_TEST)
	render.enable_state(render.STATE_BLEND)
	render.set_blend_func(render.BLEND_SRC_ALPHA, render.BLEND_ONE_MINUS_SRC_ALPHA)
	render.disable_state(render.STATE_CULL_FACE)
	
	render.draw(self.tile_pred)
	render.draw(self.particle_pred)
	render.draw_debug3d()
	
	-- Setup GUI view
	render.set_view(vmath.matrix4())
	render.set_projection(vmath.matrix4_orthographic(0, self.window_width, 0, self.window_height, -1, 1))
	
	render.enable_state(render.STATE_STENCIL_TEST)
	render.draw(self.gui_pred)
	render.draw(self.text_pred)
	render.disable_state(render.STATE_STENCIL_TEST)
	
	render.set_depth_mask(false)
	render.draw_debug2d()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("window_resized") then
		self.window_width  = render.get_window_width()
		self.window_height = render.get_window_height()
	end
	
	if message_id == hash("set_view_zoom") then
		--self.zoom = message.zoom
	end
	
	if message_id == hash("clear_color") then
		self.clear_color = message.color
	end
	
	if message_id == hash("set_view_projection") then
		self.view = message.view
	end
	
	if message_id == hash("set_view_pivot") then
		self.pivot = message.pivot
	end
	
	if message_id == hash("get_world_position") then
		local x = message.x - self.pivot_offset_x
		local y = message.y - self.pivot_offset_y
		msg.post(sender, "get_world_position", {x = x, y = y})
	end
end
